==Promises & ES6


* Arrow Functions
* Eager vs Lazy Evaluation
* Synchronous vs Asynchronous
* Understanding the Event Loop & the "Run to Completion" Rule
* Basic Promises Usage
* Multiple Promise Consumers
* Promise States
* Chaining Promises
* Callback Execution Order
* Basic Error Propagation

* Async Ripple Effect
* Parallel Execution
* Sequential Execution
* Managing Latency
* Functional Composition

* Rejecting Promises
* Passing Errors
* Unhandled Rejections
* Implementing try/catch/finally
* Using the call stack

* Classical mistakes
* Other Libraries: Q, Bluebird, jQuery
* Traceur Transpiler

===References

[JavaScript with Promises](http://shop.oreilly.com/product/0636920032151.do)
[Learning jQuery Deffered](http://shop.oreilly.com/product/0636920030508.do)
[We have problem with Promises](http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html)
[Promises](https://www.promisejs.org)
[Traceur Compiler](https://github.com/google/traceur-compiler)
[JavaScript Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)
[JavaScript Arrow Functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)
[ECMAScript 6 Learning](https://github.com/ericdouglas/ES6-Learning#books)
[ECMAScript 6 Tools](https://github.com/addyosmani/es6-tools)


===Feature of ES6/Harmony

* Modules.
* Class Declarations.
* Lexical Block Scoping.
* Iterators and Generators.
* Promises.
* Destructuring patterns.
* Tail call optimizations.

====Library Improvements

* Additional data abstractions: maps, sets, arrays of binary values
* Unicode support